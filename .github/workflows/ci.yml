name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint:lib
        continue-on-error: true

  build-library:
    name: Build Library
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build:lib

      - name: Upload library build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: library-dist
          path: dist/ngx-i18n-tools
          retention-days: 7

  test-library:
    name: Test Library
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:lib -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

  build-demo:
    name: Build Demo App
    runs-on: ubuntu-latest
    needs: build-library

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library first
        run: npm run build:lib

      - name: Build demo app (development)
        run: npm run build:demo -- --configuration=development

      - name: Upload demo build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: demo-app-dist
          path: dist/demo-app
          retention-days: 7

  e2e-workflow:
    name: Test i18n Workflow
    runs-on: ubuntu-latest
    needs: build-library

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build:lib

      - name: Extract i18n
        run: npm run i18n:extract
        continue-on-error: true

      - name: Validate translations
        run: npm run i18n:validate
        continue-on-error: true

      - name: Export to XLIFF
        run: npm run i18n:export
        continue-on-error: true

      - name: Build demo with localization
        run: npm run build:demo -- --localize
        continue-on-error: true

  matrix-build:
    name: Build on Multiple Node Versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18.x', '20.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build:lib

      - name: Build demo app
        run: npm run build:demo -- --configuration=development

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npx prettier --check "**/*.{ts,html,css,json,md}"
        continue-on-error: true

      - name: TypeScript compilation check
        run: npx tsc --noEmit
        continue-on-error: true
